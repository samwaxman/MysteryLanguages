#lang racket
(require (prefix-in ML- "../Numbers/Numbers1.rkt")
         "../ML-Helpers.rkt")
(provide (unprefix-out "../Numbers/Numbers1.rkt")
         #%array-access
         #%to-array)

(define #%to-array (lambda list-args (list->vector list-args)))

(define (#%array-access array index)
  (if (or (>= (vector-length array) index)
          (< 0 index))
      (raise-user-error "Array index out of bounds.")
      (vector-ref array index)))

#;(define (#%array-access array index)
  (vector-ref array (modulo index (vector-length array))))

#;(define (#%array-access array index)
  (if (or (>= (vector-length array) index)
          (< 0 index))
      'Undefined
      (vector-ref array index)))